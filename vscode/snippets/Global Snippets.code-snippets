{
  "React Function Component": {
    "prefix": "fc",
    "body": [
      "import { FC } from 'react'",
      "",
      "interface Props {}",
      "",
      "export const $TM_FILENAME_BASE: FC<Props> = ({$1}) => {",
      "\t\treturn (${2:<></>});",
      "}",
      ""
    ],
    "description": "React Function Component"
  },
  "Console Log": {
    "prefix": "clg",
    "body": ["console.log(${1:object})"],
    "description": "Console Log"
  },
  "Named Function": {
    "prefix": "nfn",
    "body": ["const ${1:name} = (${2:params}) => {", "  ${3:}", "}"],
    "description": "Named Function"
  },
  "Anonymous Function": {
    "prefix": "afn",
    "body": ["(${1:params}) => {${2:}}"],
    "description": "Named Function"
  },
  "Then-Catch Promise": {
    "prefix": "thenc",
    "body": [
      ".then((${1:res}) => {${2:}}).catch((err) => {console.log(err)});"
    ],
    "description": "Then-Catch Promise"
  },
  "Destructured Array": {
    "prefix": "dar",
    "body": ["const [${1:state}, set${2:State}] = useState(${3:})"],
    "description": "Destructured Array"
  },
  "Destructured Object": {
    "prefix": "dob",
    "body": ["const {${2:}} = ${1:obj}"],
    "description": "Destructured Object"
  },
  "Array Method": {
    "prefix": "ary",
    "body": ["${1:array}.${2:forEach}(${3:item} => {${4:}})"],
    "description": "Array Method"
  },
  "Styled Component": {
    "prefix": "stc",
    "body": [
      "export ${4:}const Styled${1:name} = styled${2:}`",
      "  ${3:};",
      "`;"
    ],
    "description": "Styled Component"
  },
  "Ternary": {
    "prefix": "ter",
    "body": ["${1:condition} ? ${2:true} : ${3:false};"],
    "description": "Ternary"
  },
  "Import": {
    "prefix": "imp",
    "body": ["import {${2:}} from '${1:package}'"],
    "description": "Ternary"
  },
  "Debugger": {
    "prefix": "db",
    "body": ["debugger;"],
    "description": "Debugger statement"
  },
  "Console Dir": {
    "prefix": "cdi",
    "body": ["console.dir(${1:});"],
    "description": "console dir"
  }
}
